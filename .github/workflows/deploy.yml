name: Deploy staging

# Trigger this workflow on every push to the 'staging' branch
on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest # Job will run on a fresh Ubuntu VM
    environment: staging # Use the 'staging' environment from GitHub for secrets
    permissions:
      contents: read # Need to read the code
      packages: write # Need to push the Docker image to GHCR

    steps:
      # Step 1: Get the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx for advanced building
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Cache Docker layers to speed up subsequent builds
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Step 4: Log in to the GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # The user who triggered the workflow
          password: ${{ secrets.bishara }} # The secret PAT

      # Step 5: Build the Docker image and push it to GHCR
      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: . # Root of the repository
          file: test-project/Dockerfile
          push: true # Push the image after building
          tags: ghcr.io/bis-a11y/app:latest
          build-args: | # Pass build-time variables to the Dockerfile
       
  deploy:
    runs-on: ubuntu-latest
    needs: build # Only run this job if the 'build' job succeeds
    steps:
      # This checkout step is often not needed for a deploy job and can be removed
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 6: Connect to the server via SSH and run deployment commands
      - name: Deploy to STAGING environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
          
